# set the log level for the node
logLevel: "error"

# override the fullname
fullnameOverride: null
nameOverride: null

# rpc node moniker, will default to the fullname
moniker: null

# number of nodes to run
replicasCount: 1

# chain id of lava
chainId: "lava-testnet-2"

# set the directory to mount the data volume to
dataDir: "/data"

# set the volume storage size
storageSize: "100Gi"

# setup ingress for the node
# example:
# ingress:
#  enabled: true
#  tlsOverride:
#    - secretName: lava-rpc-tls
#      hosts:
#        - lava-rpc.example.com
#  rulesOverride:
#    - host: lava-rpc.example.com
#      http:
#        paths:
#          - path: /
#            backend:
#              serviceName: lava-rpc
#              servicePort: 5000
#  annotations: {}
ingress:
  enabled: true
  className: "nginx"
  host: null
  annotations: {}
  http:
    annotations: 
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/rewrite-target: /$2
    paths:
      - port: rpc
        hostPrefix: ""
        path: /
        pathType: Prefix

      - port: rpc
        hostPrefix: ""
        path: /rpc(/|$)(.*)
        pathType: ImplementationSpecific

      - port: rest
        hostPrefix: ""
        path: /rest(/|$)(.*)
        pathType: ImplementationSpecific

      - port: grpc-web
        hostPrefix: grpc-web
        path: / 
        pathType: Prefix
  grpc:
    annotations:
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/backend-protocol: "GRPC"
    paths:
      - port: grpc
        hostPrefix: grpc
        path: /
        pathType: Prefix
  certificateName: null
  tlsOverride: null
  rulesOverride: null

# add custom environment variables to the node using secret of configs
envFrom: []

# add custom environment variables to the node
env:
  - name: "SEED_NODES"
    value: "3a445bfdbe2d0c8ee82461633aa3af31bc2b4dc0@testnet2-seed-node.lavanet.xyz:26656,e593c7a9ca61f5616119d6beb5bd8ef5dd28d62d@testnet2-seed-node2.lavanet.xyz:26656"

# image to deploy
image:
  repository: us-central1-docker.pkg.dev/lavanet-public/images/lava-rpc
  pullPolicy: Always
  tag: v0.21.1.2

# port to expose the node on
ports:
  - name: rpc
    number: 26657
    protocol: TCP
  - name: rest
    number: 1317
    protocol: TCP
  - name: grpc
    number: 9090
    protocol: TCP
  - name: grpc-web
    number: 9091
    protocol: TCP

# set service account name
serviceAccountName: null

# service settings
service:
  enabled: true
  name: null
  type: ClusterIP
  annotations: {}
  # override .Values.ports with these values
  ports: null

# mount secrets as files, useful for mounting key file
extraSecretMounts: []
  # - name: node-private-key
  #   mountPath: /data
  #   subPath: /keychain/node-private-key
  #   secretName: node-private-key
  #   readOnly: true

# mount config as files, useful for mounting the config file
extraConfigMounts: []
  # - name: node-config
  #   mountPath: /data
  #   subPath: /data/node-config.toml
  #   configName: node-config
  #   readOnly: true

# resource limits for the node
resources:
  requests:
    cpu: "200m"
    memory: 2Gi
  limits:
    memory: 8Gi

# override the start command to start the rpc
command: null

# readiness probe
readinessProbe:
  enabled: false
  httpGet:
    path: /status
    port: 26657
  # initialDelaySeconds: 30
  # periodSeconds: 10
  # timeoutSeconds: 5
  # successThreshold: 1
  # failureThreshold: 3

# liveness probe
livenessProbe:
  enabled: false
  httpGet:
    path: /health
    port: 26657
  # initialDelaySeconds: 30
  # periodSeconds: 10
  # timeoutSeconds: 5
  # successThreshold: 1
  # failureThreshold: 3

imagePullSecrets: []
nodeSelector: {}
tolerations: []
affinity: {}
podAnnotations: {}
podSecurityContext: {}
securityContext: {}

experimentalGcsFuse:
  enabled: false
  storage: 500Gi
  accessModes: ["ReadWriteMany"]
  annotations: 
    gcs.csi.ofek.dev/gid: "0"
    gcs.csi.ofek.dev/uid: "0"
    gcs.csi.ofek.dev/dir-mode: "0775"
    # gcs.csi.ofek.dev/file-mode: "0775"
  storageClass: "csi-gcs"
  mountPath: "/data"